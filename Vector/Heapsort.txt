#include <iostream>
using namespace std;

void heapify(int arr[], int N, int i){
 
    int root = i;
 
    int l = 2 * i + 1;
 
    int r = 2 * i + 2;
 
    if (l < N && arr[l] > arr[root])
        root = l;
 
    if (r < N && arr[r] > arr[root])
        root = r;
 
    if (root != i) {
        swap(arr[i], arr[root]);
 
        heapify(arr, N, root);
    }
}
 
int main(){

    int arr[] = { 12, 11, 13, 5, 6, 7};
    int N = sizeof(arr) / sizeof(arr[0]);
    

    cout << "Disordened array: " << endl;
    
    for (int i = 0; i < N; ++i)
        cout << arr[i] << " ";
    cout << "\n";


    for (int i = N / 2 - 1; i >= 0; i--){
        heapify(arr, N, i);
    }

    cout << "Array almost ordened: " << endl;
    
    for (int i = 0; i < N; ++i)
        cout << arr[i] << " ";
    
    cout << "\n";


    for (int i = N - 1; i > 0; i--) {
        swap(arr[0], arr[i]);
 
        heapify(arr, i, 0);
    }
 
    cout << "Ordened array:  \n";

    for (int i = 0; i < N; ++i)
        cout << arr[i] << " ";

}